==Опис накопичених даних==
===Погода===
Дані про прогноз погоди отримується в програмі завдяки модулю pyown, який є Python обкладинкою для OpenWeatherMaps API. Доступ до API забезпечує об'єкт OWM, який вимагає від розробника введення ключа від офіційного представника даних. В свою чергу OWM відкриває можливість використання методів для накописення інформації із платформи:
*weather_at_place - отримання інформації про погоду в певному регіоні за назвою географічного місця. 
*weather_at_id - доступ до погоди в конкретному місці за ідентифікаційним кодом цього місця.
*weather_at_coords - доступ до даних за географічними координатами.
Саме останній метод був обраний для застосування в веб-платформі, так як дозволяє директивно передавати географічну довготу та широту із Google Maps в pyowm.
Інформація, яку отримує розробник, є JSON об'єктом (dict в преставленні Python), який містить поля про поточну температуру (середнє значення), максимльний показник, мінімальний показник.
При використанні платформи, користувач обирає n точок призначення, через які поступово буде пересуватися. Очевидно, що для отримання потрбіної інформації доведенться виконати n запитів на сервер.
===Дані про маршрут користувача===
Дані про маршрут, який обрав користувач на мапі отримуються через google maps api в JSON форматі. Доступ забезпечується через APIKEY. Надається наступна інформація:
*час подорожі для пішої подорожі і декількома видами транспорту
*координати пунктів відбуття і прибуття в трьох форматах 
*координати проміжних локацій

==Результат обчислення==
В результаті обробки маршруту і погодних умов на ньому обирається оптимальний набір одягу для подорожі. До уваги беруться проміжні пункти призначення і час подорожі. Для зареєстрованих в системі користувачів також береться до уваги наявний в шафі користувача одяг. Модуль, що проводить обчислення повертає список типів одягу, які необхідні. 