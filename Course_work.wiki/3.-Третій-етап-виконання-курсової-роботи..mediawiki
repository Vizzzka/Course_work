===ADT WeatherManager===
WeatherManager – абстрактний тип даних, який дозволяє розробнику, який працює, аналізує чи відслідковує дані про погоду, ефективно виконати поставлені завдання. Головна ціль дизайну типу даних – надати зручний та мобільний ітерфейс розробки веб-, настільних та мобільних додатків, що використовують метеорологічну інформацію.
Представлений ADT зберігає довільну кількість об’єктів-преставлень даних про погоду, у вигляді масиву або зв’язної структури та посилання на відповідний гардероб користувача як набір елементів списку. Такий підхід максимізує інтуїтивність використання типу та зберігає достатній рівень абстракції щоб бути реалізованим на різних мовах та загалом системах програмуваннях. Описаний ADT повинен втілювати такий функціонал:
*внесення нового запису про метеорологічні дані
*вилучення існуючого запису про метеорологічні дані
*оновлення інформації про гардероб користувача
*доступ до даних про погоду у представленні списку за відповідним ключем
*доступ до даних про релевантний одяг за заданими записами про метеорологію
Такі операції над абстрактним типом даних можуть бути реалізовані як функції на множині об’єктів або ж методи окремого класу, що втілюють ADT. Усі частини розробленого тіла мусять піддаватися динамічним змінам, через інтенсивність подачі оновленої інформації через мережу Інтернет та подання актуального стану подій, а отже використовувати динамічні типи даних: список, словник, зв’язна структура, тощо. 

===Приклад використання===
 manager = WeatherManager(weather_data, wardrobe_data)
 manager.add(WeatherData(new_weather))
 manager.remove(index=2)
 manager.update_wardrobe(new_wardrobe)
 print(manager.sorted(key=lambda x: -x.temp))
 print(manager.proper_clothes(index=1))

(clothes_advisor/weather_manager_usage.py)
===Діаграма UML===
(https://ibb.co/L5wzr9v)